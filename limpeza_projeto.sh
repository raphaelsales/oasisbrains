#!/bin/bash

echo "üßπ LIMPEZA DO PROJETO ALZHEIMER"
echo "================================"
echo

# Fun√ß√£o para confirmar remo√ß√£o
confirm_removal() {
    local file="$1"
    local reason="$2"
    echo "‚ùì Remover: $file"
    echo "   Motivo: $reason"
    echo -n "   Confirmar? (s/n): "
    read -r response
    if [[ "$response" == "s" || "$response" == "S" ]]; then
        rm -f "$file"
        echo "   ‚úÖ Removido: $file"
    else
        echo "   ‚è≠Ô∏è  Mantido: $file"
    fi
    echo
}

# Fun√ß√£o para remo√ß√£o autom√°tica
auto_remove() {
    local file="$1"
    local reason="$2"
    if [ -f "$file" ]; then
        rm -f "$file"
        echo "üóëÔ∏è  Removido: $file ($reason)"
    fi
}

echo "1Ô∏è‚É£ REMOVENDO ARQUIVOS DE BACKUP..."
echo "--------------------------------"
auto_remove "alzheimer_analysis_suite.sh.backup" "Backup desnecess√°rio"
auto_remove "alzheimer_analysis_suite.sh.before_fix" "Backup de corre√ß√£o"
auto_remove "quick_analysis.sh.backup" "Backup de corre√ß√£o"

echo
echo "2Ô∏è‚É£ REMOVENDO ARQUIVOS TEMPOR√ÅRIOS..."
echo "-----------------------------------"
auto_remove "fix_git_auth.sh" "Arquivo vazio"
auto_remove "teste_simples.sh" "Teste simples"
auto_remove "teste_rapido_fastsurfer.sh" "Teste r√°pido"
auto_remove "teste_gpu_completo.py" "Teste GPU"
auto_remove "teste_gpu_config.py" "Teste configura√ß√£o GPU"

echo
echo "3Ô∏è‚É£ REMOVENDO SCRIPTS DE CORRE√á√ÉO (j√° aplicados)..."
echo "------------------------------------------------"
auto_remove "corrigir_aviso_sklearn.sh" "Corre√ß√£o j√° aplicada"
auto_remove "corrigir_caminhos_python.sh" "Corre√ß√£o j√° aplicada"
auto_remove "corrigir_reconall.sh" "Corre√ß√£o j√° aplicada"
auto_remove "fix_git_annex.sh" "Corre√ß√£o j√° aplicada"
auto_remove "fix_environment.sh" "Corre√ß√£o j√° aplicada"
auto_remove "fix_ci.sh" "Corre√ß√£o j√° aplicada"

echo
echo "4Ô∏è‚É£ REMOVENDO SCRIPTS DE PROCESSAMENTO OBSOLETOS..."
echo "------------------------------------------------"
auto_remove "run_fastsurfer_fixed.sh" "Vers√£o corrigida obsoleta"
auto_remove "test_fastsurfer_fixed.sh" "Teste corrigido obsoleto"
auto_remove "test_fastsurfer_final.sh" "Teste final obsoleto"
auto_remove "test_fastsurfer_definitivo.sh" "Teste definitivo obsoleto"

echo
echo "5Ô∏è‚É£ AN√ÅLISE DE MODELOS DUPLICADOS..."
echo "---------------------------------"
echo "üìä Modelos encontrados:"
ls -lh *.joblib *.h5 2>/dev/null | while read -r line; do
    echo "   $line"
done

echo
echo "6Ô∏è‚É£ AN√ÅLISE DE VISUALIZA√á√ïES..."
echo "----------------------------"
echo "üìà Visualiza√ß√µes encontradas:"
ls -lh *.png 2>/dev/null | while read -r line; do
    echo "   $line"
done

echo
echo "7Ô∏è‚É£ ESTAT√çSTICAS FINAIS..."
echo "------------------------"
echo "üìÅ Arquivos Python: $(ls -1 *.py 2>/dev/null | wc -l)"
echo "üìÅ Scripts Shell: $(ls -1 *.sh 2>/dev/null | wc -l)"
echo "üìÅ Modelos: $(ls -1 *.h5 *.joblib 2>/dev/null | wc -l)"
echo "üìÅ Visualiza√ß√µes: $(ls -1 *.png 2>/dev/null | wc -l)"
echo "üìÅ Datasets: $(ls -1 *.csv 2>/dev/null | wc -l)"

echo
echo "8Ô∏è‚É£ ARQUIVOS ESSENCIAIS (N√ÉO REMOVER)..."
echo "-------------------------------------"
echo "‚úÖ alzheimer_ai_pipeline.py (PIPELINE PRINCIPAL)"
echo "‚úÖ alzheimer_complete_dataset.csv (DATASET BASE)"
echo "‚úÖ alzheimer_binary_classifier.h5 (MODELO BIN√ÅRIO)"
echo "‚úÖ alzheimer_cdr_classifier.h5 (MODELO CDR)"
echo "‚úÖ alzheimer_dashboard_generator.py (DASHBOARD)"
echo "‚úÖ alzheimer_analysis_suite.sh (INTERFACE)"

echo
echo "üßπ LIMPEZA CONCLU√çDA!"
echo "====================="
echo "üí° Dica: Execute 'ls -la' para ver o resultado final"
echo "üí° Dica: Use 'du -sh .' para ver o tamanho total do projeto"
